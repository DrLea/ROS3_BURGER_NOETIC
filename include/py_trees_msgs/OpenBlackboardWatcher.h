// Generated by gencpp from file py_trees_msgs/OpenBlackboardWatcher.msg
// DO NOT EDIT!


#ifndef PY_TREES_MSGS_MESSAGE_OPENBLACKBOARDWATCHER_H
#define PY_TREES_MSGS_MESSAGE_OPENBLACKBOARDWATCHER_H

#include <ros/service_traits.h>


#include <py_trees_msgs/OpenBlackboardWatcherRequest.h>
#include <py_trees_msgs/OpenBlackboardWatcherResponse.h>


namespace py_trees_msgs
{

struct OpenBlackboardWatcher
{

typedef OpenBlackboardWatcherRequest Request;
typedef OpenBlackboardWatcherResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct OpenBlackboardWatcher
} // namespace py_trees_msgs


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::py_trees_msgs::OpenBlackboardWatcher > {
  static const char* value()
  {
    return "4ed40443479f1f30fe6cf433b04df9b6";
  }

  static const char* value(const ::py_trees_msgs::OpenBlackboardWatcher&) { return value(); }
};

template<>
struct DataType< ::py_trees_msgs::OpenBlackboardWatcher > {
  static const char* value()
  {
    return "py_trees_msgs/OpenBlackboardWatcher";
  }

  static const char* value(const ::py_trees_msgs::OpenBlackboardWatcher&) { return value(); }
};


// service_traits::MD5Sum< ::py_trees_msgs::OpenBlackboardWatcherRequest> should match
// service_traits::MD5Sum< ::py_trees_msgs::OpenBlackboardWatcher >
template<>
struct MD5Sum< ::py_trees_msgs::OpenBlackboardWatcherRequest>
{
  static const char* value()
  {
    return MD5Sum< ::py_trees_msgs::OpenBlackboardWatcher >::value();
  }
  static const char* value(const ::py_trees_msgs::OpenBlackboardWatcherRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::py_trees_msgs::OpenBlackboardWatcherRequest> should match
// service_traits::DataType< ::py_trees_msgs::OpenBlackboardWatcher >
template<>
struct DataType< ::py_trees_msgs::OpenBlackboardWatcherRequest>
{
  static const char* value()
  {
    return DataType< ::py_trees_msgs::OpenBlackboardWatcher >::value();
  }
  static const char* value(const ::py_trees_msgs::OpenBlackboardWatcherRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::py_trees_msgs::OpenBlackboardWatcherResponse> should match
// service_traits::MD5Sum< ::py_trees_msgs::OpenBlackboardWatcher >
template<>
struct MD5Sum< ::py_trees_msgs::OpenBlackboardWatcherResponse>
{
  static const char* value()
  {
    return MD5Sum< ::py_trees_msgs::OpenBlackboardWatcher >::value();
  }
  static const char* value(const ::py_trees_msgs::OpenBlackboardWatcherResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::py_trees_msgs::OpenBlackboardWatcherResponse> should match
// service_traits::DataType< ::py_trees_msgs::OpenBlackboardWatcher >
template<>
struct DataType< ::py_trees_msgs::OpenBlackboardWatcherResponse>
{
  static const char* value()
  {
    return DataType< ::py_trees_msgs::OpenBlackboardWatcher >::value();
  }
  static const char* value(const ::py_trees_msgs::OpenBlackboardWatcherResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // PY_TREES_MSGS_MESSAGE_OPENBLACKBOARDWATCHER_H
