## *********************************************************
##
## File autogenerated for the theora_image_transport package
## by the dynamic_reconfigure package.
## Please do not edit.
##
## ********************************************************/

from dynamic_reconfigure.encoding import extract_params

inf = float('inf')

config_description = {'name': 'Default', 'type': '', 'state': True, 'cstate': 'true', 'id': 0, 'parent': 0, 'parameters': [{'name': 'optimize_for', 'type': 'int', 'default': 1, 'level': 0, 'description': "Try to achieve either 'target_bitrate' or 'quality'", 'min': 0, 'max': 1, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': "{'enum': [{'name': 'Bitrate', 'type': 'int', 'value': 0, 'srcline': 9, 'srcfile': '/tmp/binarydeb/ros-noetic-theora-image-transport-1.14.0/cfg/TheoraPublisher.cfg', 'description': 'Aim for requested bitrate', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Quality', 'type': 'int', 'value': 1, 'srcline': 10, 'srcfile': '/tmp/binarydeb/ros-noetic-theora-image-transport-1.14.0/cfg/TheoraPublisher.cfg', 'description': 'Aim for requested quality', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'Enum to control whether optimizing for bitrate or quality'}", 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'target_bitrate', 'type': 'int', 'default': 800000, 'level': 0, 'description': 'Target encoding bitrate, bits per second', 'min': 0, 'max': 99200000, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'quality', 'type': 'int', 'default': 31, 'level': 0, 'description': 'Encoding quality', 'min': 0, 'max': 63, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'keyframe_frequency', 'type': 'int', 'default': 64, 'level': 0, 'description': 'Maximum distance between key frames', 'min': 1, 'max': 64, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}], 'groups': [], 'srcline': 246, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'class': 'DEFAULT', 'parentclass': '', 'parentname': 'Default', 'field': 'default', 'upper': 'DEFAULT', 'lower': 'groups'}

min = {}
max = {}
defaults = {}
level = {}
type = {}
all_level = 0

#def extract_params(config):
#    params = []
#    params.extend(config['parameters'])
#    for group in config['groups']:
#        params.extend(extract_params(group))
#    return params

for param in extract_params(config_description):
    min[param['name']] = param['min']
    max[param['name']] = param['max']
    defaults[param['name']] = param['default']
    level[param['name']] = param['level']
    type[param['name']] = param['type']
    all_level = all_level | param['level']

TheoraPublisher_Bitrate = 0
TheoraPublisher_Quality = 1
